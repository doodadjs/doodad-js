//! BEGIN_MODULE()

//! REPLACE_BY("// Copyright 2015-2017 Claude Petit, licensed under Apache License version 2.0\n", true)
// doodad-js - Object-oriented programming framework
// File: Unit_Types_Is.js - Unit testing module file
// Project home: https://github.com/doodadjs/
// Author: Claude Petit, Quebec city
// Contact: doodadjs [at] gmail.com
// Note: I'm still in alpha-beta stage, so expect to find some bugs or incomplete parts !
// License: Apache V2
//
//	Copyright 2015-2017 Claude Petit
//
//	Licensed under the Apache License, Version 2.0 (the "License");
//	you may not use this file except in compliance with the License.
//	You may obtain a copy of the License at
//
//		http://www.apache.org/licenses/LICENSE-2.0
//
//	Unless required by applicable law or agreed to in writing, software
//	distributed under the License is distributed on an "AS IS" BASIS,
//	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//	See the License for the specific language governing permissions and
//	limitations under the License.
//! END_REPLACE()

module.exports = {
	add: function add(DD_MODULES) {
		DD_MODULES = (DD_MODULES || {});
		DD_MODULES['Doodad.Test.Types.Is'] = {
			type: 'TestModule',
			version: /*! REPLACE_BY(TO_SOURCE(VERSION(MANIFEST("name")))) */ null /*! END_REPLACE()*/,
			dependencies: ['Doodad.Test.Types'],

			// Unit
			priority: null,

			proto: {
				run: function run(root, /*optional*/options) {
					"use strict";

					var doodad = root.Doodad,
						types = doodad.Types,
						tools = doodad.Tools,
						namespaces = doodad.Namespaces,
						test = doodad.Test,
						unit = test.Types.Is,
						io = doodad.IO,
						client = doodad.Client;

						
					if (!options) {
						options = {};
					};
					
					
					global.a = [];
					global.a.property = 1;
					
					global.b = new Number(0);
					global.b.property = 2;
					
					global.c = [1];
					delete global.c[0];
					
					global.textNode = global.document && document.createTextNode("Hello World");
					
					global.d = types.createObject(null);

					
					global.symbol = types.hasGetSymbolEnabled() && types.getSymbol("symbol") || undefined;
					
					
					var command = test.prepareCommand(types.isNothing, "Doodad.Types.isNothing");
					command.run(true, {eval: true, repetitions: 100},        /**/ "undefined");
					command.run(true, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();

					var command = test.prepareCommand(types.isPrimitive, "Doodad.Types.isPrimitive");
					command.run(true, {eval: true, repetitions: 100},        /**/ "undefined");
					command.run(true, {eval: true, repetitions: 100},        /**/ "null");
					command.run(true, {eval: true, repetitions: 100},        /**/ "''");
					command.run(true, {eval: true, repetitions: 100},        /**/ "' '");
					command.run(true, {eval: true, repetitions: 100},        /**/ "'a'");
					command.run(true, {eval: true, repetitions: 100},        /**/ "'1'");
					command.run(true, {eval: true, repetitions: 100},        /**/ "0");
					command.run(true, {eval: true, repetitions: 100},        /**/ "1");
					command.run(true, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(true, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(true, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(true, {eval: true, repetitions: 100},        /**/ "true");
					command.run(true, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					command.run(false, {eval: true, repetitions: 100},        /**/"d");
					global.symbol && command.run(true, {eval: true, repetitions: 100},         /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isNumber, "Doodad.Types.isNumber");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(true, {eval: true, repetitions: 100},        /**/ "0");
					command.run(true, {eval: true, repetitions: 100},        /**/ "1");
					command.run(true, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(true, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(0)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(1)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(true, {eval: true, repetitions: 100},        /**/ "b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();

					var command = test.prepareCommand(types.isInteger, "Doodad.Types.isInteger");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(true, {eval: true, repetitions: 100},        /**/ "0");
					command.run(true, {eval: true, repetitions: 100},        /**/ "1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(0)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(true, {eval: true, repetitions: 100},        /**/ "b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();

					var command = test.prepareCommand(types.isBoolean, "Doodad.Types.isBoolean");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(true, {eval: true, repetitions: 100},        /**/ "true");
					command.run(true, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isInfinite, "Doodad.Types.isInfinite");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(true, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isFloat, "Doodad.Types.isFloat");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(true, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isString, "Doodad.Types.isString");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(true, {eval: true, repetitions: 100},        /**/ "''");
					command.run(true, {eval: true, repetitions: 100},        /**/ "' '");
					command.run(true, {eval: true, repetitions: 100},        /**/ "'a'");
					command.run(true, {eval: true, repetitions: 100},        /**/ "'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String(' ')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('a')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isDate, "Doodad.Types.isDate");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isArray, "Doodad.Types.isArray");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(true, {eval: true, repetitions: 100},        /**/ "[]");
					command.run(true, {eval: true, repetitions: 100},        /**/ "[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(true, {eval: true, repetitions: 100},        /**/ "a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(true, {eval: true, repetitions: 100},        /**/ "c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isArrayAndNotEmpty, "Doodad.Types.isArrayAndNotEmpty");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(true, {eval: true, repetitions: 100},        /**/ "[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isArrayLike, "Doodad.Types.isArrayLike");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(true, {eval: true, repetitions: 100},        /**/ "''");
					command.run(true, {eval: true, repetitions: 100},        /**/ "' '");
					command.run(true, {eval: true, repetitions: 100},        /**/ "'a'");
					command.run(true, {eval: true, repetitions: 100},        /**/ "'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(true, {eval: true, repetitions: 100},        /**/ "[]");
					command.run(true, {eval: true, repetitions: 100},        /**/ "[1]");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String(' ')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('a')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(true, {eval: true, repetitions: 100, note: "May fail under Safari because 'document.forms' is a special function."},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(true, {eval: true, repetitions: 100},         /**/ "a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(true, {eval: true, repetitions: 100},         /**/ "c");
					command.run(true, {eval: true, repetitions: 100},         /**/ "{length: 3}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{length: 3.1}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{length: -3}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{length: NaN}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{length: Infinity}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{length: -Infinity}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{length: null}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{length: {}}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{length: []}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{length: ''}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{length: '3'}");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isArrayLikeAndNotEmpty, "Doodad.Types.isArrayLikeAndNotEmpty");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(true, {eval: true, repetitions: 100},        /**/ "' '");
					command.run(true, {eval: true, repetitions: 100},        /**/ "'a'");
					command.run(true, {eval: true, repetitions: 100},        /**/ "'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(true, {eval: true, repetitions: 100},        /**/ "[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String(' ')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('a')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(document.forms.length > 0, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isObject, "Doodad.Types.isObject");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(true, {eval: true, repetitions: 100},        /**/ "{}");
					command.run(true, {eval: true, repetitions: 100},        /**/ "{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					command.run(true,  {eval: true, repetitions: 100},        /**/"d");
					global.symbol && command.run(false, {eval: true, repetitions: 100},         /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isObjectLike, "Doodad.Types.isObjectLike");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(true, {eval: true, repetitions: 100},        /**/ "{}");
					command.run(true, {eval: true, repetitions: 100},        /**/ "{a: 1}");
					command.run(true, {eval: true, repetitions: 100},        /**/ "[]");
					command.run(true, {eval: true, repetitions: 100},        /**/ "[1]");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String(' ')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('a')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('1')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(0)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(1)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(0.1)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(true, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Date");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(true, {eval: true, repetitions: 100},        /**/ "(function(){})");
					command.run(true, {eval: true, repetitions: 100},        /**/ "Object.prototype.toString");
					command.run(true, {eval: true, repetitions: 100},        /**/ "Object");
					global.document && command.run(true, {eval: true, repetitions: 100},        /**/ "document.body");
					command.run(true, {eval: true, repetitions: 100},        /**/ "a");
					command.run(true, {eval: true, repetitions: 100},        /**/ "b");
					command.run(true, {eval: true, repetitions: 100},        /**/ "c");
					command.run(true, {eval: true, repetitions: 100},        /**/"d");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isFunction, "Doodad.Types.isFunction");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100, note: "May fail under Safari because 'document.forms' is a special function."},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(true, {eval: true, repetitions: 100},         /**/ "(function(){})");
					command.run(true, {eval: true, repetitions: 100},         /**/ "Object.prototype.toString");
					command.run(true, {eval: true, repetitions: 100},         /**/ "Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isNativeFunction, "Doodad.Types.isNativeFunction");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100, note: "May fail under Safari because 'document.forms' is a special function."},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(true, {eval: true, repetitions: 100},        /**/ "Object.prototype.toString");
					command.run(true, {eval: true, repetitions: 100},        /**/ "Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isCustomFunction, "Doodad.Types.isCustomFunction");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100, note: "May fail under Safari because 'document.forms' is a special function."},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(true, {eval: true, repetitions: 100},        /**/ "(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isNaN, "Doodad.Types.isNaN");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(true, {eval: true, repetitions: 100},         /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(true,  {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isError, "Doodad.Types.isError");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();

					if (global.document) {
						var command = test.prepareCommand(client.isWindow, "Doodad.Client.isWindow");
						command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
						command.run(false, {eval: true, repetitions: 100},        /**/ "null");
						command.run(false, {eval: true, repetitions: 100},        /**/"''");
						command.run(false, {eval: true, repetitions: 100},        /**/"' '");
						command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
						command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
						command.run(false, {eval: true, repetitions: 100},        /**/"0");
						command.run(false, {eval: true, repetitions: 100},        /**/"1");
						command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
						command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
						command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
						command.run(false, {eval: true, repetitions: 100},        /**/ "true");
						command.run(false, {eval: true, repetitions: 100},        /**/ "false");
						command.run(false, {eval: true, repetitions: 100},        /**/"{}");
						command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
						command.run(false, {eval: true, repetitions: 100},        /**/"[]");
						command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
						command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
						command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
						command.run(false, {eval: true, repetitions: 100},        /**/"Object");
						command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
						command.run(false, {eval: true, repetitions: 100},        /**/"a");
						command.run(false, {eval: true, repetitions: 100},        /**/"b");
						command.run(false, {eval: true, repetitions: 100},        /**/"c");
						global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
						command.run(true, {repetitions: 100},                     /**/ global);
						command.run(false, {eval: true, repetitions: 100},        /**/"document");
						command.run(false, {eval: true, repetitions: 100},        /**/"textNode");
						command.end();
					};
					
					if (global.document) {
						var command = test.prepareCommand(client.isDocument, "Doodad.Client.isDocument");
						command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
						command.run(false, {eval: true, repetitions: 100},        /**/ "null");
						command.run(false, {eval: true, repetitions: 100},        /**/"''");
						command.run(false, {eval: true, repetitions: 100},        /**/"' '");
						command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
						command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
						command.run(false, {eval: true, repetitions: 100},        /**/"0");
						command.run(false, {eval: true, repetitions: 100},        /**/"1");
						command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
						command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
						command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
						command.run(false, {eval: true, repetitions: 100},        /**/ "true");
						command.run(false, {eval: true, repetitions: 100},        /**/ "false");
						command.run(false, {eval: true, repetitions: 100},        /**/"{}");
						command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
						command.run(false, {eval: true, repetitions: 100},        /**/"[]");
						command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
						command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
						command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
						command.run(false, {eval: true, repetitions: 100},        /**/"Object");
						command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
						command.run(false, {eval: true, repetitions: 100},        /**/"a");
						command.run(false, {eval: true, repetitions: 100},        /**/"b");
						command.run(false, {eval: true, repetitions: 100},        /**/"c");
						global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
						command.run(false, {repetitions: 100},                    /**/global);
						command.run(true, {eval: true, repetitions: 100},         /**/ "document");
						command.run(false, {eval: true, repetitions: 100},        /**/"textNode");
						command.end();
					};
					
					if (global.document) {
						var command = test.prepareCommand(client.isNode, "Doodad.Client.isNode");
						command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
						command.run(false, {eval: true, repetitions: 100},        /**/ "null");
						command.run(false, {eval: true, repetitions: 100},        /**/"''");
						command.run(false, {eval: true, repetitions: 100},        /**/"' '");
						command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
						command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
						command.run(false, {eval: true, repetitions: 100},        /**/"0");
						command.run(false, {eval: true, repetitions: 100},        /**/"1");
						command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
						command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
						command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
						command.run(false, {eval: true, repetitions: 100},        /**/ "true");
						command.run(false, {eval: true, repetitions: 100},        /**/ "false");
						command.run(false, {eval: true, repetitions: 100},        /**/"{}");
						command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
						command.run(false, {eval: true, repetitions: 100},        /**/"[]");
						command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
						command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
						command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
						command.run(false, {eval: true, repetitions: 100},        /**/"Object");
						command.run(true, {eval: true, repetitions: 100},         /**/ "document.body");
						command.run(false, {eval: true, repetitions: 100},        /**/"a");
						command.run(false, {eval: true, repetitions: 100},        /**/"b");
						command.run(false, {eval: true, repetitions: 100},        /**/"c");
						global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
						command.run(false, {repetitions: 100},                    /**/global);
						command.run(true, {eval: true, repetitions: 100},         /**/ "document");
						command.run(true, {eval: true, repetitions: 100},         /**/ "textNode");
						command.end();
					};
					
					if (global.document) {
						var command = test.prepareCommand(client.isElement, "Doodad.Client.isElement");
						command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
						command.run(false, {eval: true, repetitions: 100},        /**/ "null");
						command.run(false, {eval: true, repetitions: 100},        /**/"''");
						command.run(false, {eval: true, repetitions: 100},        /**/"' '");
						command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
						command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
						command.run(false, {eval: true, repetitions: 100},        /**/"0");
						command.run(false, {eval: true, repetitions: 100},        /**/"1");
						command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
						command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
						command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
						command.run(false, {eval: true, repetitions: 100},        /**/ "true");
						command.run(false, {eval: true, repetitions: 100},        /**/ "false");
						command.run(false, {eval: true, repetitions: 100},        /**/"{}");
						command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
						command.run(false, {eval: true, repetitions: 100},        /**/"[]");
						command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
						command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
						command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
						command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
						command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
						command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
						command.run(false, {eval: true, repetitions: 100},        /**/"Object");
						command.run(true,  {eval: true, repetitions: 100},        /**/ "document.body");
						command.run(false, {eval: true, repetitions: 100},        /**/"a");
						command.run(false, {eval: true, repetitions: 100},        /**/"b");
						command.run(false, {eval: true, repetitions: 100},        /**/"c");
						global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
						command.run(false, {repetitions: 100},                    /**/global);
						command.run(false, {eval: true, repetitions: 100},        /**/"document");
						command.run(false, {eval: true, repetitions: 100},        /**/"textNode");
						command.end();
					};
					
					var command = test.prepareCommand(types.isNothingOrEmpty, "Doodad.Types.isNothingOrEmpty");
					command.run(true, {eval: true, repetitions: 100},        /**/ "undefined");
					command.run(true, {eval: true, repetitions: 100},        /**/ "null");
					command.run(true, {eval: true, repetitions: 100},        /**/ "''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(true, {eval: true, repetitions: 100},        /**/ "{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(true, {eval: true, repetitions: 100},        /**/ "[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(0)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(1)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(0.1)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(document.forms.length === 0, {eval: true, repetitions: 100, note: "May fail under Safari because 'document.forms' is not an array-like object and property 'length' is an own property."},        /**/ "document.forms");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Date");
					command.run(true, {eval: true, repetitions: 100, note: "May fail under MS Internet Explorer because properties 'number' and 'description' are own properties."},        /**/ "new Error");
					command.run(true, {eval: true, repetitions: 100},        /**/ "(function(){})");
					command.run(true, {eval: true, repetitions: 100},        /**/ "Object.prototype.toString");
					//command.run(true, {eval: true, repetitions: 100},        /**/ "Object");
					global.document && command.run(true, {eval: true, repetitions: 100, note: "May fail under Chrome, Opera and Safari because properties are owned properties."},        /**/ "document.body");
					command.run(true, {eval: true, repetitions: 100},        /**/ "a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(true, {eval: true, repetitions: 100},        /**/ "c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isEmpty, "Doodad.Types.isEmpty");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(true, {eval: true, repetitions: 100},        /**/ "''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(true, {eval: true, repetitions: 100},        /**/ "{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(true, {eval: true, repetitions: 100},        /**/ "[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(0)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(1)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(0.1)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(document.forms.length === 0, {eval: true, repetitions: 100, note: "May fail under Safari because 'document.forms' is not an array-like object and property 'length' is an own property."},        /**/ "document.forms");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new Date");
					command.run(true, {eval: true, repetitions: 100, note: "May fail under MS Internet Explorer because properties 'number' and 'description' are own properties."},        /**/ "new Error");
					command.run(true, {eval: true, repetitions: 100},        /**/ "(function(){})");
					command.run(true, {eval: true, repetitions: 100},        /**/ "Object.prototype.toString");
					//command.run(true, {eval: true, repetitions: 100},        /**/ "Object");
					global.document && command.run(true, {eval: true, repetitions: 100, note: "May fail under Chrome, Opera and Safari because properties are owned properties."},        /**/ "document.body");
					command.run(true, {eval: true, repetitions: 100},        /**/ "a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(true, {eval: true, repetitions: 100},        /**/ "c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isStringAndNotEmpty, "Doodad.Types.isStringAndNotEmpty");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(true, {eval: true, repetitions: 100},        /**/ "' '");
					command.run(true, {eval: true, repetitions: 100},        /**/ "'a'");
					command.run(true, {eval: true, repetitions: 100},        /**/ "'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String(' ')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('a')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isStringAndNotEmptyTrim, "Doodad.Types.isStringAndNotEmptyTrim");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(true, {eval: true, repetitions: 100},        /**/ "'a'");
					command.run(true, {eval: true, repetitions: 100},        /**/ "'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/"{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('a')");
					command.run(true, {eval: true, repetitions: 100},        /**/ "new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isObjectAndNotEmpty, "Doodad.Types.isObjectAndNotEmpty");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(true, {eval: true, repetitions: 100},        /**/ "{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/"document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/"a");
					command.run(false, {eval: true, repetitions: 100},        /**/"b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isObjectLikeAndNotEmpty, "Doodad.Types.isObjectLikeAndNotEmpty");
					command.run(false, {eval: true, repetitions: 100},        /**/"undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/"''");
					command.run(false, {eval: true, repetitions: 100},        /**/"' '");
					command.run(false, {eval: true, repetitions: 100},        /**/"'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/"'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/"0");
					command.run(false, {eval: true, repetitions: 100},        /**/"1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(true, {eval: true, repetitions: 100},        /**/ "{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/"[]");
					command.run(false, {eval: true, repetitions: 100},        /**/"[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					//global.document && command.run(false, {eval: true, repetitions: 100, note: "May fail under most browsers because 'length' is an own property."},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/"new Date");
					command.run(false, {eval: true, repetitions: 100, note: "May fail under MS Internet Explorer because properties 'number' and 'description' are own properties."},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/"(function(){})");
					command.run(false, {eval: true, repetitions: 100},        /**/"Object.prototype.toString");
					//command.run(false, {eval: true, repetitions: 100},        /**/"Object");
					global.document && command.run(false, {eval: true, repetitions: 100, note: "May fail under Chrome, Opera and Safari because properties are owned properties."},        /**/"document.body");
					command.run(true, {eval: true, repetitions: 100},        /**/ "a");
					command.run(true, {eval: true, repetitions: 100},        /**/ "b");
					command.run(false, {eval: true, repetitions: 100},        /**/"c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					
					var hasIter = false;
					try {
						hasIter = types.isSymbol(global.Symbol ? global.Symbol.iterator : undefined);
					} catch(ex) {
					};
					
					var hasGen = false;
					try {
						types.eval("function*(){}");
						hasGen = true;
					} catch(ex) {
					};
					
															
					
					var command = test.prepareCommand(types.hasIterators, "Doodad.Types.hasIterators");
					command.run(hasIter, {repetitions: 100}                   /**/);
					command.end();
					
					
					var command = test.prepareCommand(types.isIterable, "Doodad.Types.isIterable");
					command.run(false, {eval: true, repetitions: 100},        /**/ "undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(hasIter, {eval: true, repetitions: 100},      /**/ "''");
					command.run(hasIter, {eval: true, repetitions: 100},      /**/ "' '");
					command.run(hasIter, {eval: true, repetitions: 100},      /**/ "'a'");
					command.run(hasIter, {eval: true, repetitions: 100},      /**/ "'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0");
					command.run(false, {eval: true, repetitions: 100},        /**/ "1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{a: 1}");
					command.run(hasIter, {eval: true, repetitions: 100},      /**/ "[]");
					command.run(hasIter, {eval: true, repetitions: 100},      /**/ "[1]");
					command.run(hasIter, {eval: true, repetitions: 100},      /**/ "new String('')");
					command.run(hasIter, {eval: true, repetitions: 100},      /**/ "new String(' ')");
					command.run(hasIter, {eval: true, repetitions: 100},      /**/ "new String('a')");
					command.run(hasIter, {eval: true, repetitions: 100},      /**/ "new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					//global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/ "(function(){})");
					hasGen && command.run(false, {eval: true, repetitions: 100},                 /**/ "(function*(){})");
					hasGen && command.run(hasIter, {eval: true, repetitions: 100},                 /**/ "(function*(){})()");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.body");
					command.run(hasIter, {eval: true, repetitions: 100},      /**/ "a");
					command.run(false, {eval: true, repetitions: 100},        /**/ "b");
					command.run(hasIter, {eval: true, repetitions: 100},      /**/ "c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					
					var command = test.prepareCommand(types.isIteratorLike, "Doodad.Types.isIteratorLike");
					command.run(false, {eval: true, repetitions: 100},        /**/ "undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/ "''");
					command.run(false, {eval: true, repetitions: 100},        /**/ "' '");
					command.run(false, {eval: true, repetitions: 100},        /**/ "'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/ "'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0");
					command.run(false, {eval: true, repetitions: 100},        /**/ "1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "[]");
					command.run(false, {eval: true, repetitions: 100},        /**/ "[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					//global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/ "(function(){})");
					hasGen && command.run(false, {eval: true, repetitions: 100},        /**/ "(function*(){})");
					hasGen && command.run(hasIter, {eval: true, repetitions: 100},      /**/ "(function*(){})()");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/ "a");
					command.run(false, {eval: true, repetitions: 100},        /**/ "b");
					command.run(false, {eval: true, repetitions: 100},        /**/ "c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					

					var command = test.prepareCommand(types.hasGenerators, "Doodad.Types.hasGenerators");
					command.run(hasGen, {repetitions: 100}                    /**/);
					command.end();

					var command = test.prepareCommand(types.isGeneratorFunction, "Doodad.Types.isGeneratorFunction");
					command.run(false, {eval: true, repetitions: 100},        /**/ "undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/ "''");
					command.run(false, {eval: true, repetitions: 100},        /**/ "' '");
					command.run(false, {eval: true, repetitions: 100},        /**/ "'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/ "'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0");
					command.run(false, {eval: true, repetitions: 100},        /**/ "1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "[]");
					command.run(false, {eval: true, repetitions: 100},        /**/ "[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					//global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/ "(function(){})");
					hasGen && command.run(true,  {eval: true, repetitions: 100},        /**/ "(function*(){})");
					hasGen && command.run(false, {eval: true, repetitions: 100},        /**/ "(function*(){})()");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/ "a");
					command.run(false, {eval: true, repetitions: 100},        /**/ "b");
					command.run(false, {eval: true, repetitions: 100},        /**/ "c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					
					var command = test.prepareCommand(types.isGenerator, "Doodad.Types.isGenerator");
					command.run(false, {eval: true, repetitions: 100},        /**/ "undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/ "''");
					command.run(false, {eval: true, repetitions: 100},        /**/ "' '");
					command.run(false, {eval: true, repetitions: 100},        /**/ "'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/ "'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0");
					command.run(false, {eval: true, repetitions: 100},        /**/ "1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "[]");
					command.run(false, {eval: true, repetitions: 100},        /**/ "[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					//global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/ "(function(){})");
					hasGen && command.run(false, {eval: true, repetitions: 100},        /**/ "(function*(){})");
					hasGen && command.run(true,  {eval: true, repetitions: 100},        /**/ "(function*(){})()");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/ "a");
					command.run(false, {eval: true, repetitions: 100},        /**/ "b");
					command.run(false, {eval: true, repetitions: 100},        /**/ "c");
					global.symbol && command.run(false, {eval: true, repetitions: 100},        /**/ "symbol");
					command.end();
					
					var command = test.prepareCommand(types.isSymbol, "Doodad.Types.isSymbol");
					command.run(false, {eval: true, repetitions: 100},        /**/ "undefined");
					command.run(false, {eval: true, repetitions: 100},        /**/ "null");
					command.run(false, {eval: true, repetitions: 100},        /**/ "''");
					command.run(false, {eval: true, repetitions: 100},        /**/ "' '");
					command.run(false, {eval: true, repetitions: 100},        /**/ "'a'");
					command.run(false, {eval: true, repetitions: 100},        /**/ "'1'");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0");
					command.run(false, {eval: true, repetitions: 100},        /**/ "1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "0.1");
					command.run(false, {eval: true, repetitions: 100},        /**/ "NaN");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Infinity");
					command.run(false, {eval: true, repetitions: 100},        /**/ "true");
					command.run(false, {eval: true, repetitions: 100},        /**/ "false");
					command.run(false, {eval: true, repetitions: 100},        /**/"{}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "{a: 1}");
					command.run(false, {eval: true, repetitions: 100},        /**/ "[]");
					command.run(false, {eval: true, repetitions: 100},        /**/ "[1]");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String('')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String(' ')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String('a')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new String('1')");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(0)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(0.1)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(NaN)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Number(Infinity)");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Boolean(false)");
					//global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.forms");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Date");
					command.run(false, {eval: true, repetitions: 100},        /**/ "new Error");
					command.run(false, {eval: true, repetitions: 100},        /**/ "(function(){})");
					hasGen && command.run(false, {eval: true, repetitions: 100},        /**/ "(function*(){})");
					hasGen && command.run(false, {eval: true, repetitions: 100},        /**/ "(function*(){})()");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Object.prototype.toString");
					command.run(false, {eval: true, repetitions: 100},        /**/ "Object");
					global.document && command.run(false, {eval: true, repetitions: 100},        /**/ "document.body");
					command.run(false, {eval: true, repetitions: 100},        /**/ "a");
					command.run(false, {eval: true, repetitions: 100},        /**/ "b");
					command.run(false, {eval: true, repetitions: 100},        /**/ "c");
					global.symbol && command.run(true, {eval: true, repetitions: 100},         /**/ "symbol");
					command.end();
					
				},
			},
		};
		return DD_MODULES;
	},
};
//! END_MODULE()